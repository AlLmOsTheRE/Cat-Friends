{"version":3,"sources":["components/Card.js","components/CardList.js","components/ErrorBoundary.js","components/Scroll.js","components/SearchBox.js","containers/App.js","actions.js","constants.js","reducers.js","serviceWorker.js","index.js"],"names":["Card","_ref","id","name","email","react_default","a","createElement","className","alt","concat","src","CardList","users","map","user","components_Card","Object","assign","key","ErrorBoundary","state","hasError","error","info","this","setState","props","children","Component","Scroll","SearchBox","handleChange","type","placeholder","onChange","App","getUsers","_this$props","searchField","handleSearchChange","isPending","filteredUsers","filter","toLowerCase","includes","style","height","width","length","react","components_SearchBox","components_Scroll","components_ErrorBoundary","components_CardList","connect","usersReducer","requestUsers","dispatch","event","payload","target","value","fetch","then","r","json","data","catch","err","initialStateSearch","initialStateUsers","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","logger","createLogger","middlewares","thunk","reducers","combineReducers","arguments","undefined","action","objectSpread","store","createStore","applyMiddleware","apply","ReactDOM","render","es","src_containers_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b14aee95.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => (\n  <div className=\"bg-light-green dib br3 pa3 ma2 grow tc\">\n    <img alt={`User: ${name}`} src={`https://robohash.org/${id}?set=set4&size=200x200`} />\n    <div>\n      <h2>{name}</h2>\n      <p>{email}</p>\n    </div>\n  </div>\n);\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({ users }) =>\n  users.map(user => <Card key={user.id} {...user} />);\n\nexport default CardList;\n","import React, { Component } from 'react';\n\nclass ErrorBoundary extends Component {\n  state = {\n    hasError: false,\n  };\n\n  componentDidCatch(error, info) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <h1>Oops. That is not good.</h1>;\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","import React from 'react';\n\nconst Scroll = ({ children }) => <div>{children}</div>;\n\nexport default Scroll;\n","import React from 'react';\n\nconst SearchBox = ({ handleChange }) => (\n  <div className=\"pa2\">\n    <input\n      className=\"pa3 ba b--green bg-lightest-blue\"\n      type=\"search\"\n      placeholder=\"Search cats\"\n      onChange={handleChange}\n    />\n  </div>\n);\n\nexport default SearchBox;","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\n// import { bindActionCreators } from 'redux';\nimport { changeSearchField, getUsers } from '../actions';\nimport CardList from '../components/CardList';\nimport ErrorBoundary from '../components/ErrorBoundary';\nimport Scroll from '../components/Scroll';\nimport SearchBox from '../components/SearchBox';\nimport './App.css';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.getUsers();\n  }\n\n  render() {\n    const { searchField, handleSearchChange, users, isPending } = this.props;\n    const filteredUsers = users.filter(({ name }) =>\n      name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className=\"tc\" style={{ height: '100vh', width: '100vw' }}>\n        <h1 className=\"f1\">{isPending ? 'Loading...' : 'Cat friends'}</h1>\n        {!!users.length && (\n          <Fragment>\n            <SearchBox handleChange={handleSearchChange} />\n            <Scroll>\n              <ErrorBoundary>\n                <CardList users={filteredUsers} />\n              </ErrorBoundary>\n            </Scroll>\n          </Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  searchField: state.usersReducer.searchField,\n  isPending: state.requestUsers.isPending,\n  users: state.requestUsers.users,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  handleSearchChange: event => dispatch(changeSearchField(event.target.value)),\n  getUsers: () => dispatch(getUsers()),\n});\n\n// const mapDispatchToProps = dispatch => bindActionCreators({\n//   handleSearchChange: event => changeSearchField(event.target.value),\n//   getUsers,\n// }, dispatch);\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import {\n  CHANGE_SEARCH_FIELD,\n  REQUEST_USERS_PENDING,\n  REQUEST_USERS_SUCCESS,\n  REQUEST_USERS_FAIL\n} from './constants';\n\nexport const changeSearchField = string => ({\n  type: CHANGE_SEARCH_FIELD,\n  payload: string\n});\n\nexport const getUsers = () => dispatch => {\n  dispatch({ type: REQUEST_USERS_PENDING });\n  fetch('https://jsonplaceholder.typicode.com/users')\n    .then(r => r.json())\n    .then(data =>\n      dispatch({\n        type: REQUEST_USERS_SUCCESS,\n        payload: data\n      })\n    )\n    .catch(err =>\n      dispatch({\n        type: REQUEST_USERS_FAIL,\n        payload: err\n      })\n    );\n};\n","export const REQUEST_USERS_PENDING = 'REQUEST_USERS_PENDING';\nexport const REQUEST_USERS_SUCCESS = 'REQUEST_USERS_SUCCESS';\nexport const REQUEST_USERS_FAIL = 'REQUEST_USERS_FAIL';\n\nexport const CHANGE_SEARCH_FIELD = 'CHANGE_SEARCH_FIELD';\n","import { CHANGE_SEARCH_FIELD, REQUEST_USERS_FAIL, REQUEST_USERS_PENDING, REQUEST_USERS_SUCCESS } from './constants';\n\nconst initialStateSearch = {\n  searchField: '',\n};\n\nconst initialStateUsers = {\n  isPending: false,\n  users: [],\n  error: '',\n}\n\nexport const usersReducer = (state = initialStateSearch, action = {}) => {\n  switch (action.type) {\n    case CHANGE_SEARCH_FIELD:\n      return { ...state, searchField: action.payload };\n    default:\n      return state;\n  }\n}\n\nexport const requestUsers = (state = initialStateUsers, action = {}) => {\n  switch (action.type) {\n    case REQUEST_USERS_PENDING:\n      return { ...state, isPending: true };\n    case REQUEST_USERS_SUCCESS:\n      return { ...state, users: action.payload, isPending: false };\n    case REQUEST_USERS_FAIL:\n      return { ...state, error: action.payload, isPending: false };\n    default:\n      return state;\n  }\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, compose, createStore, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunk from 'redux-thunk';\nimport 'tachyons';\nimport App from './containers/App';\nimport './index.css';\nimport { usersReducer, requestUsers } from './reducers';\nimport * as serviceWorker from './serviceWorker';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst logger = createLogger();\nconst middlewares = [thunk, logger];\nconst reducers = combineReducers({ usersReducer, requestUsers });\nconst store = createStore(\n  reducers,\n  composeEnhancers(applyMiddleware(...middlewares))\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}